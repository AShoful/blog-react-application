{"version":3,"sources":["serviceWorker.js","Components/Navbar.js","Components/PostsList.js","Components/Sceleton.js","Components/Error.js","axios/index.js","api/index.js","store/actions/actionsApp.js","store/actions/actionTypes.js","store/actions/actionsPosts.js","Containers/CardsContainer.js","Components/TextFields.js","Containers/AddPostContainer.js","Containers/EditPostContainer.js","Components/CardPost.js","store/actions/actionsPost.js","Containers/PostContainer.js","Router.js","App.js","utills/themes.js","store/reducers/app.js","store/reducers/rootReducer.js","store/reducers/posts.js","store/reducers/post.js","index.js"],"names":["Boolean","window","location","hostname","match","ElevationScroll","props","children","trigger","useScrollTrigger","disableHysteresis","threshold","target","undefined","React","cloneElement","elevation","useStyles","makeStyles","theme","root","minHeight","marginBottom","spacing","padding","main","display","justifyContent","Navbar","classes","className","AppBar","position","Container","Toolbar","Grid","container","item","xs","Button","color","component","Link","to","icons","link","textDecoration","palette","primary","PostsList","remove","id","title","maxWidth","justify","sm","Typography","variant","IconButton","fontSize","onClick","Divider","defaultProps","card","borderBottom","cardContent","width","flexDirection","handle","height","backgroundColor","date","fullLine","halfLine","Skeleton","content","Array","from","length","map","index","key","fontWeight","alignItems","error","Error","axios","create","baseURL","get","delete","data","post","put","showError","type","fetchItemSuccess","payload","removeItem","CardsContainer","posts","useSelector","state","app","loading","dispatch","useDispatch","a","postApi","alert","message","fetchRemoveItem","useEffect","cards","Sceleton","paddingTop","filter","CardMedia","objectFit","TextFields","handleSubmitFetch","postId","useState","setTitle","body","setBody","noValidate","autoComplete","TextField","label","value","onChange","e","fullWidth","multiline","rows","submit","disabled","handleSubmit","AddPostContainer","fetchPostItem","withRouter","params","res","fetchPutItem","name","text","form","paddingBottom","input","CardPost","addComment","comment","setComment","comments","gutterBottom","i","fetchPostSuccess","addCommentStore","PostContainer","fetchPost","Object","keys","count","Router","path","exact","EditPostContainer","createMuiTheme","light","dark","contrastText","secondary","typography","htmlFontSize","useNextVariants","App","initialState","combineReducers","action","items","push","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.1b2d1ca7.chunk.js","sourcesContent":["/* eslint-disable no-use-before-define */\r\n/* eslint-disable no-console */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      // eslint-disable-next-line no-param-reassign\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n// MUI stuff\r\nimport {\r\n  useScrollTrigger,\r\n  AppBar,\r\n  Grid,\r\n  Toolbar,\r\n  Button,\r\n  Container\r\n} from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction ElevationScroll(props) {\r\n  const { children, window } = props;\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n    target: window ? window() : undefined\r\n  });\r\n\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 4 : 0\r\n  });\r\n}\r\n\r\nElevationScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  window: PropTypes.func\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: 60,\r\n    marginBottom: theme.spacing(2),\r\n    padding: 0\r\n  },\r\n  main: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between'\r\n  }\r\n}));\r\n\r\nconst Navbar = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ElevationScroll {...props} className={classes.root}>\r\n      <AppBar position=\"sticky\">\r\n        <Container>\r\n          <Toolbar>\r\n            <Grid container>\r\n              <Grid item xs={12} className={classes.main}>\r\n                <Button color=\"inherit\" component={Link} to=\"/\">\r\n                  Home\r\n                </Button>\r\n                <Button color=\"inherit\" component={Link} to=\"/addpost\">\r\n                  Addpost\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n    </ElevationScroll>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","/* eslint-disable consistent-return */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  IconButton,\r\n  Grid,\r\n  Divider,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      minHeight: 60\r\n    },\r\n    icons: {\r\n      display: 'flex',\r\n      justifyContent: 'space-between'\r\n    },\r\n    link: {\r\n      textDecoration: 'none',\r\n      color: theme.palette.primary.main\r\n    }\r\n  };\r\n});\r\n\r\nexport default function PostsList({ item, remove }) {\r\n  const { id, title } = item;\r\n  const handleClickDelete = () => {\r\n    remove(id);\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\" className={classes.root}>\r\n      <Grid container spacing={2} justify=\"space-between\">\r\n        <Grid item xs={12} sm={10}>\r\n          <Typography\r\n            className={classes.link}\r\n            component={Link}\r\n            to={`/post/${id}`}\r\n            variant=\"subtitle1\"\r\n          >\r\n            {title}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={2} className={classes.icons}>\r\n          <IconButton component={Link} to={`/post/edit/${id}`}>\r\n            <EditIcon fontSize=\"small\" color=\"primary\" />\r\n          </IconButton>\r\n          <IconButton onClick={handleClickDelete}>\r\n            <DeleteIcon fontSize=\"small\" color=\"primary\" />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n      <Divider />\r\n    </Container>\r\n  );\r\n}\r\n\r\nPostsList.propTypes = {\r\n  item: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    title: PropTypes.string\r\n  }),\r\n  remove: PropTypes.func\r\n};\r\n\r\nPostsList.defaultProps = {\r\n  item: {\r\n    id: 0,\r\n    title: 'title'\r\n  },\r\n  remove: () => {}\r\n};\r\n","/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    display: 'flex',\r\n    marginBottom: 20,\r\n    borderBottom: '2px solid rgba(0,0,0, 0.2)'\r\n  },\r\n  cardContent: {\r\n    width: '100%',\r\n    flexDirection: 'column',\r\n    padding: 25\r\n  },\r\n  handle: {\r\n    width: 60,\r\n    height: 18,\r\n    backgroundColor: theme.palette.primary.main,\r\n    marginBottom: 7\r\n  },\r\n  date: {\r\n    height: 14,\r\n    width: 100,\r\n    backgroundColor: 'rgba(0,0,0, 0.3)',\r\n    marginBottom: 10\r\n  },\r\n  fullLine: {\r\n    height: 15,\r\n    width: '100%',\r\n    backgroundColor: 'rgba(0,0,0, 0.2)',\r\n    marginBottom: 10\r\n  },\r\n  halfLine: {\r\n    height: 15,\r\n    width: '50%',\r\n    backgroundColor: 'rgba(0,0,0, 0.2)',\r\n    marginBottom: 10\r\n  }\r\n}));\r\n\r\nconst Skeleton = () => {\r\n  const classes = useStyles();\r\n\r\n  const content = Array.from({ length: 3 }).map((item, index) => (\r\n    <div className={classes.card} key={index}>\r\n      <div className={classes.cardContent}>\r\n        <div className={classes.handle} />\r\n        <div className={classes.date} />\r\n        <div className={classes.fullLine} />\r\n        <div className={classes.fullLine} />\r\n        <div className={classes.halfLine} />\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  return <Container>{content}</Container>;\r\n};\r\n\r\nexport default Skeleton;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    display: 'flex',\r\n    height: 300,\r\n    fontWeight: 600,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    color: theme.palette.primary.error,\r\n    borderBottom: '2px solid rgba(0,0,0, 0.2)'\r\n  }\r\n}));\r\n\r\nconst Error = ({ error }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container>\r\n      <div className={classes.card}>{error}</div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nError.propTypes = {\r\n  error: PropTypes.string\r\n};\r\n\r\nError.defaultProps = {\r\n  error: ''\r\n};\r\n\r\nexport default Error;\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://bloggy-api.herokuapp.com'\r\n});\r\n","import axios from '../axios';\r\n\r\nexport default {\r\n  get: () => axios.get(`/posts`),\r\n  getItem: (id) => axios.get(`/posts/${id}?_embed=comments`),\r\n  remove: (id) => axios.delete(`/posts/${id}`),\r\n  addComment: (data) => axios.post('/comments', data),\r\n  post: (data) => axios.post('/posts', data),\r\n  put: (data, id) => axios.put(`/posts/${id}`, data)\r\n};\r\n","import {\r\n  SHOW_ERROR,\r\n  SHOW_LOADER,\r\n  HIDE_ERROR,\r\n  HIDE_LOADER\r\n} from './actionTypes';\r\n\r\nexport function showLoader() {\r\n  return {\r\n    type: SHOW_LOADER\r\n  };\r\n}\r\n\r\nexport function hideLoader() {\r\n  return {\r\n    type: HIDE_LOADER\r\n  };\r\n}\r\n\r\nexport function showError(error) {\r\n  return {\r\n    type: SHOW_ERROR,\r\n    error\r\n  };\r\n}\r\n\r\nexport function hideError() {\r\n  return {\r\n    type: HIDE_ERROR\r\n  };\r\n}\r\n","export const FETCH_ITEMS_SUCCESS = 'FETCH_ITEMS_SUCCESS';\r\nexport const FETCH_ITEM_SUCCESS = 'FETCH_ITEM_SUCCESS';\r\nexport const FETCH_POST_SUCCESS = 'FETCH_POST_SUCCESS';\r\nexport const FETCH_ITEM_REMOVE = 'FETCH_ITEM_REMOVE';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const CLEAR_POST = 'CLEAR_POST';\r\nexport const SHOW_ERROR = 'SHOW_ERROR';\r\nexport const SHOW_LOADER = 'SHOW_LOADER';\r\nexport const HIDE_ERROR = 'HIDE_ERROR';\r\nexport const HIDE_LOADER = 'HIDE_LOADER';\r\n","/* eslint-disable no-alert */\r\n/* eslint-disable no-use-before-define */\r\nimport postApi from '../../api';\r\nimport {\r\n  FETCH_ITEM_SUCCESS,\r\n  FETCH_ITEM_REMOVE,\r\n  FETCH_ITEMS_SUCCESS\r\n} from './actionTypes';\r\nimport { showLoader, showError, hideError, hideLoader } from './actionsApp';\r\n\r\nexport function fetchItems() {\r\n  return async (dispatch) => {\r\n    dispatch(showLoader());\r\n    dispatch(hideError());\r\n    const cards = await postApi.get();\r\n    try {\r\n      dispatch(fetchItemsSuccess(cards.data));\r\n      dispatch(hideLoader());\r\n    } catch (error) {\r\n      dispatch(showError(error));\r\n      dispatch(hideLoader());\r\n    }\r\n  };\r\n}\r\n\r\nfunction fetchItemsSuccess(data) {\r\n  return {\r\n    type: FETCH_ITEMS_SUCCESS,\r\n    data\r\n  };\r\n}\r\n\r\nexport function fetchItem(id) {\r\n  return async (dispatch) => {\r\n    dispatch(showLoader());\r\n    dispatch(hideError());\r\n    const res = await postApi.getItem(id);\r\n    try {\r\n      const post = res.data;\r\n      dispatch(fetchItemSuccess(post));\r\n      dispatch(hideLoader());\r\n    } catch (error) {\r\n      dispatch(showError(error.message));\r\n      dispatch(hideLoader());\r\n    }\r\n  };\r\n}\r\n\r\nexport function fetchItemSuccess(post) {\r\n  return {\r\n    type: FETCH_ITEM_SUCCESS,\r\n    payload: post\r\n  };\r\n}\r\n\r\nexport function fetchRemoveItem(id) {\r\n  return async (dispatch) => {\r\n    await postApi.remove(id);\r\n    try {\r\n      dispatch(removeItem(id));\r\n      window.alert('Пост успешно удален!');\r\n    } catch (error) {\r\n      dispatch(showError(error.message));\r\n    }\r\n  };\r\n}\r\n\r\nexport function removeItem(id) {\r\n  return {\r\n    type: FETCH_ITEM_REMOVE,\r\n    payload: id\r\n  };\r\n}\r\n\r\nexport function fetchPostItem(data) {\r\n  return async (dispatch) => {\r\n    dispatch(showLoader());\r\n    dispatch(hideError());\r\n    await postApi.post(data);\r\n    try {\r\n      dispatch(hideLoader());\r\n      window.alert('Пост успешно сохранен!');\r\n    } catch (error) {\r\n      dispatch(hideLoader());\r\n      dispatch(showError(error.message));\r\n    }\r\n  };\r\n}\r\n\r\nexport function fetchPutItem(data, id) {\r\n  return async (dispatch) => {\r\n    dispatch(showLoader());\r\n    dispatch(hideError());\r\n    await postApi.put(data, id);\r\n    try {\r\n      dispatch(hideLoader());\r\n      window.alert('Пост успешно изменен!');\r\n    } catch (error) {\r\n      dispatch(hideLoader());\r\n      dispatch(showError(error.message));\r\n    }\r\n  };\r\n}\r\n","/* eslint-disable react/forbid-prop-types */\r\nimport React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { Container } from '@material-ui/core';\r\nimport PostList from '../Components/PostsList';\r\nimport Sceleton from '../Components/Sceleton';\r\nimport Error from '../Components/Error';\r\n\r\nimport { fetchItems, fetchRemoveItem } from '../store/actions/actionsPosts';\r\n\r\nconst CardsContainer = () => {\r\n  const posts = useSelector((state) => state.posts);\r\n  const { loading, error } = useSelector((state) => state.app);\r\n  const dispatch = useDispatch();\r\n\r\n  const removeItem = (id) => dispatch(fetchRemoveItem(id));\r\n\r\n  React.useEffect(() => {\r\n    dispatch(fetchItems());\r\n  }, [dispatch]);\r\n\r\n  if (error) {\r\n    return <Error error={error} />;\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\">\r\n      {!loading ? (\r\n        posts.map((item) => (\r\n          // check\r\n          <PostList key={item.id} item={item} remove={removeItem} />\r\n        ))\r\n      ) : (\r\n        <Sceleton />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CardsContainer;\r\n","/* eslint-disable react/jsx-curly-newline */\r\n/* eslint-disable react/prop-types */\r\n// eslint-disable-next-line consistent-return\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Button, Grid, Container, TextField } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    root: {\r\n      paddingTop: 40\r\n    },\r\n    loading: {\r\n      filter: 'blur(2px)'\r\n    },\r\n    CardMedia: {\r\n      marginBottom: theme.spacing(1),\r\n      objectFit: 'cover'\r\n    }\r\n  };\r\n});\r\n\r\nexport default function TextFields({\r\n  handleSubmitFetch,\r\n  postId,\r\n  loading,\r\n  post\r\n}) {\r\n  const classes = useStyles();\r\n  const [title, setTitle] = React.useState(post ? post.title : '');\r\n  const [body, setBody] = React.useState(post ? post.body : '');\r\n  const data = { title, body };\r\n\r\n  React.useEffect(() => {\r\n    if (post && post.title) {\r\n      setTitle(post.title);\r\n      setBody(post.body);\r\n    }\r\n  }, [post]);\r\n\r\n  const handleSubmit = (data, postId) => {\r\n    handleSubmitFetch(data, postId);\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\" className={classes.root}>\r\n      <form\r\n        className={loading ? classes.loading : null}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n      >\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Title\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              label=\"Body\"\r\n              multiline\r\n              rows=\"5\"\r\n              onChange={(e) => setBody(e.target.value)}\r\n              value={body}\r\n            />\r\n          </Grid>\r\n          <Container maxWidth=\"xs\">\r\n            <Grid item xs={12}>\r\n              <Button\r\n                variant=\"contained\"\r\n                fullWidth\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                disabled={!title || !body}\r\n                onClick={() => handleSubmit(data, postId)}\r\n              >\r\n                Send\r\n              </Button>\r\n            </Grid>\r\n          </Container>\r\n        </Grid>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport TextFields from '../Components/TextFields';\r\n\r\nimport { fetchPostItem } from '../store/actions/actionsPosts';\r\n\r\nconst AddPostContainer = () => {\r\n  const { loading } = useSelector((state) => state.app);\r\n  const dispatch = useDispatch();\r\n  const fetchItem = (data) => dispatch(fetchPostItem(data));\r\n  return <TextFields handleSubmitFetch={fetchItem} loading={loading} />;\r\n};\r\n\r\nexport default AddPostContainer;\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport TextFields from '../Components/TextFields';\r\nimport Error from '../Components/Error';\r\n\r\nimport { fetchPutItem, fetchItem } from '../store/actions/actionsPosts';\r\n\r\nconst EditPostContainer = ({ match }) => {\r\n  const { loading, error } = useSelector((state) => state.app);\r\n  const dispatch = useDispatch();\r\n  const postId = +match.params.id;\r\n  const post = useSelector((state) => state.posts).filter(\r\n    (post) => post.id === postId\r\n  );\r\n\r\n  const fetchPost = (data, id) => dispatch(fetchPutItem(data, id));\r\n\r\n  React.useEffect(() => {\r\n    if (!post.length) {\r\n      dispatch(fetchItem(postId));\r\n    }\r\n  }, [dispatch, post.length, postId]);\r\n\r\n  if (error) {\r\n    return <Error error={error} />;\r\n  }\r\n\r\n  return (\r\n    <TextFields\r\n      handleSubmitFetch={fetchPost}\r\n      post={post[0]}\r\n      postId={postId}\r\n      loading={loading}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(EditPostContainer);\r\n","/* eslint-disable react/forbid-prop-types */\r\n/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable consistent-return */\r\nimport React, { useState, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Divider,\r\n  Typography,\r\n  TextField,\r\n  IconButton\r\n} from '@material-ui/core';\r\n\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  name: {\r\n    color: theme.palette.primary.main,\r\n    fontSize: 36,\r\n    marginBottom: 0\r\n  },\r\n  text: {\r\n    fontSize: 16,\r\n    padding: 10\r\n  },\r\n  form: {\r\n    paddingBottom: 20\r\n  },\r\n  input: {\r\n    width: '80%'\r\n  }\r\n}));\r\n\r\nexport default function CardPost({ post, addComment }) {\r\n  const [comment, setComment] = useState('');\r\n  const classes = useStyles();\r\n  const { title, body, comments, id } = post;\r\n\r\n  const data = {\r\n    body: comment,\r\n    postId: id\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\" className={classes.root}>\r\n      <Grid container>\r\n        <Grid item xs={12} sm={12}>\r\n          <Typography\r\n            className={classes.name}\r\n            gutterBottom\r\n            variant=\"subtitle1\"\r\n            component=\"h4\"\r\n          >\r\n            {title}\r\n          </Typography>\r\n          <Typography\r\n            className={classes.text}\r\n            variant=\"subtitle2\"\r\n            color=\"textSecondary\"\r\n            component=\"p\"\r\n          >\r\n            {body}\r\n          </Typography>\r\n          <Grid container className={classes.form} justify=\"space-between\">\r\n            <TextField\r\n              className={classes.input}\r\n              label=\"add comment\"\r\n              value={comment}\r\n              onChange={(e) => setComment(e.target.value)}\r\n            />\r\n            <IconButton\r\n              color=\"primary\"\r\n              disabled={!comment}\r\n              onClick={() => addComment(data)}\r\n            >\r\n              <SendIcon />\r\n            </IconButton>\r\n          </Grid>\r\n          {comments.map((item, i) => (\r\n            <Fragment key={i}>\r\n              <Typography\r\n                className={classes.text}\r\n                variant=\"subtitle2\"\r\n                color=\"textSecondary\"\r\n                component=\"p\"\r\n              >\r\n                {item.body}\r\n              </Typography>\r\n              <Divider />\r\n            </Fragment>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n      <Divider />\r\n    </Container>\r\n  );\r\n}\r\n\r\nCardPost.propTypes = {\r\n  addComment: PropTypes.func,\r\n  post: PropTypes.shape({\r\n    title: PropTypes.string,\r\n    comments: PropTypes.array,\r\n    body: PropTypes.string,\r\n    id: PropTypes.number\r\n  })\r\n};\r\n\r\nCardPost.defaultProps = {\r\n  addComment: () => {},\r\n  post: {\r\n    title: '',\r\n    body: '',\r\n    comments: [],\r\n    id: 0\r\n  }\r\n};\r\n","/* eslint-disable no-alert */\r\nimport postApi from '../../api';\r\nimport { CLEAR_POST, FETCH_POST_SUCCESS, ADD_COMMENT } from './actionTypes';\r\nimport { showLoader, showError, hideError, hideLoader } from './actionsApp';\r\n\r\nfunction fetchPostSuccess(post) {\r\n  return {\r\n    type: FETCH_POST_SUCCESS,\r\n    payload: post\r\n  };\r\n}\r\n\r\nexport function clearPost() {\r\n  return {\r\n    type: CLEAR_POST\r\n  };\r\n}\r\n\r\nexport function fetchPost(id) {\r\n  return async (dispatch) => {\r\n    dispatch(showLoader());\r\n    dispatch(hideError());\r\n    const res = await postApi.getItem(id);\r\n    try {\r\n      const post = res.data;\r\n      dispatch(fetchPostSuccess(post));\r\n      dispatch(hideLoader());\r\n    } catch (error) {\r\n      dispatch(showError(error.message));\r\n      dispatch(hideLoader());\r\n    }\r\n  };\r\n}\r\n\r\nfunction addCommentStore(data) {\r\n  return {\r\n    type: ADD_COMMENT,\r\n    data\r\n  };\r\n}\r\n\r\nexport function addComment(data) {\r\n  return async (dispatch) => {\r\n    dispatch(showLoader());\r\n    dispatch(hideError());\r\n    await postApi.addComment(data);\r\n    try {\r\n      dispatch(hideLoader());\r\n      dispatch(addCommentStore(data));\r\n      window.alert('Комментарий успешно сохранен!');\r\n    } catch (error) {\r\n      dispatch(hideLoader());\r\n      dispatch(showError(error.message));\r\n    }\r\n  };\r\n}\r\n","/* eslint-disable react/forbid-prop-types */\r\n/* eslint-disable react/no-array-index-key */\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Container } from '@material-ui/core';\r\nimport CardPost from '../Components/CardPost';\r\nimport Error from '../Components/Error';\r\nimport Sceleton from '../Components/Sceleton';\r\n\r\nimport { clearPost, fetchPost, addComment } from '../store/actions/actionsPost';\r\n\r\nconst PostContainer = (props) => {\r\n  const { id } = props.match.params;\r\n  const { loading, error } = useSelector((state) => state.app);\r\n  const post = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    dispatch(fetchPost(id));\r\n    return () => dispatch(clearPost());\r\n  }, [id, dispatch]);\r\n\r\n  const commentPost = (data) => dispatch(addComment(data));\r\n\r\n  if (error) {\r\n    return <Error error={error} />;\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\">\r\n      {loading || !Object.keys(post).length ? (\r\n        <Sceleton count={1} />\r\n      ) : (\r\n        <CardPost post={post} addComment={commentPost} />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nPostContainer.propTypes = {\r\n  match: PropTypes.object\r\n};\r\n\r\nPostContainer.defaultProps = {\r\n  match: {}\r\n};\r\n\r\nexport default withRouter(PostContainer);\r\n","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport CardsContainer from './Containers/CardsContainer';\r\nimport AddPostContainer from './Containers/AddPostContainer';\r\nimport EditPostContainer from './Containers/EditPostContainer';\r\nimport PostContainer from './Containers/PostContainer';\r\n\r\nconst Router = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact component={CardsContainer} />\r\n      <Route path=\"/addpost\" exact component={AddPostContainer} />\r\n      <Route path=\"/post/:id\" exact component={PostContainer} />\r\n      <Route path=\"/post/edit/:id\" exact component={EditPostContainer} />\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","/* eslint-disable import/order */\r\nimport React from 'react';\r\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\r\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\r\n\r\nimport Navbar from './Components/Navbar';\r\nimport Router from './Router';\r\n\r\nimport './App.css';\r\nimport themeObject from './utills/themes';\r\n\r\nconst theme = createMuiTheme(themeObject);\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <MuiThemeProvider theme={theme}>\r\n        <Navbar />\r\n        <Router />\r\n      </MuiThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export default {\r\n  palette: {\r\n    primary: {\r\n      light: '#33c9dc',\r\n      main: '#00bcd4',\r\n      dark: '#008394',\r\n      contrastText: '#fff'\r\n    },\r\n    secondary: {\r\n      light: '#ff6333',\r\n      main: '#ff3d00',\r\n      dark: '#b22a00',\r\n      contrastText: '#fff'\r\n    }\r\n  },\r\n  typography: {\r\n    htmlFontSize: 16,\r\n    useNextVariants: true,\r\n    fontSize: 12\r\n  }\r\n};\r\n","import {\r\n  SHOW_LOADER,\r\n  SHOW_ERROR,\r\n  HIDE_LOADER,\r\n  HIDE_ERROR\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SHOW_LOADER:\r\n      return { ...state, loading: true };\r\n    case HIDE_LOADER:\r\n      return { ...state, loading: false };\r\n    case SHOW_ERROR:\r\n      return { ...state, error: action.error };\r\n    case HIDE_ERROR:\r\n      return { ...state, error: null };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport posts from './posts';\r\nimport app from './app';\r\nimport post from './post';\r\n\r\nexport default combineReducers({\r\n  posts,\r\n  app,\r\n  post\r\n});\r\n","/* eslint-disable no-underscore-dangle */\r\nimport {\r\n  FETCH_ITEMS_SUCCESS,\r\n  FETCH_ITEM_SUCCESS,\r\n  FETCH_ITEM_REMOVE\r\n} from '../actions/actionTypes';\r\n\r\nexport default function(state = [], action) {\r\n  switch (action.type) {\r\n    case FETCH_ITEMS_SUCCESS:\r\n      return [...action.data];\r\n    case FETCH_ITEM_SUCCESS:\r\n      return [\r\n        ...(state.items ? [...state.items, action.payload] : [action.payload])\r\n      ];\r\n    case FETCH_ITEM_REMOVE:\r\n      return [...state.filter((item) => item.id !== action.payload)];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport {\r\n  FETCH_POST_SUCCESS,\r\n  CLEAR_POST,\r\n  ADD_COMMENT\r\n} from '../actions/actionTypes';\r\n\r\nexport default function(state = {}, action) {\r\n  switch (action.type) {\r\n    case FETCH_POST_SUCCESS:\r\n      return { ...action.payload };\r\n    case ADD_COMMENT:\r\n      state.comments.push(action.data);\r\n      return { ...state };\r\n    case CLEAR_POST:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport rootReducer from './store/reducers/rootReducer';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}